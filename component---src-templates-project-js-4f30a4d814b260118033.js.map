{"version":3,"file":"component---src-templates-project-js-4f30a4d814b260118033.js","mappings":"2RAuCA,MA9BA,SAAsB,GAAS,IAAT,KAACA,GAAK,EACxB,OACI,uBAAKC,UAAU,gBACf,gBAAC,KAAM,CACHC,QAAS,CAAEC,EAAAA,IACXC,cAAe,EACfC,YAAU,GAERL,EAAKM,KAAI,CAACC,EAAOC,IAGV,gBAAC,KAAW,CAACC,IAAKF,EAAMG,MAASF,GAC9B,uBAAKP,UAAU,sBACX,uBAAKA,UAAU,WAAYU,MAAO,CAACC,gBAAiB,SAC/CL,EAAMM,KAAKC,KAAO,uBAAKC,IAAKR,EAAMM,KAAKC,IAAKE,IAAKT,EAAMG,SAExD,uBAAKT,UAAU,4BACNM,EAAMG,OAAS,sBAAIT,UAAU,6BAA6BM,EAAMG,MAAO,KACvEH,EAAMU,aAAe,sBAAIhB,UAAU,gCAAgCM,EAAMU,mBAUlH,EC7BA,EAAe,IAAa,IAAD,UAAX,KAACjB,GAAK,EACpB,MAAMkB,EAAU,IAAIlB,EAAKmB,KAAKC,MAAM,IAC9BC,EAAU,IAAIrB,EAAKsB,SAASF,MAAM,IAClCG,EAAW,IAAIvB,EAAKwB,uBAAuBJ,MAAM,IACpD,OACE,gBAAC,IAAM,KACL,2BAASnB,UAAU,mBACb,uBAAKA,UAAU,aACR,gCACCsB,aAAS,EAATA,EAAWE,WAAY,qBAAGC,KAAMH,EAAUI,UAAY1B,UAAU,aAAcsB,EAAUK,gBACrFL,SAAgB,QAAP,EAATA,EAAWM,aAAK,WAAP,EAAT,EAAkBf,QAAQS,SAAAA,EAAWO,iBACtC,uBAAK7B,UAAU,0BACZ,uBAAKc,IAAKQ,SAAgB,QAAP,EAATA,EAAWM,aAAK,WAAP,EAAT,EAAkBf,IAAKE,IAAKO,SAAgB,QAAP,EAATA,EAAWM,aAAK,WAAP,EAAT,EAAkBZ,gBAE1DM,aAAS,EAATA,EAAWO,iBACX,gBAAC,EAAY,CAAC9B,KAAMuB,EAAUO,iBAE/BP,EAAUb,OAAS,sBAAIT,UAAU,0BAA0BsB,EAAUb,QAErEa,aAAS,EAATA,EAAWQ,cAAe,sBAAI9B,UAAU,6BAA6BsB,EAAUQ,aAChF,uBAAK9B,UAAU,4BACVsB,EAAUS,kBAAqB,iCAAGC,EAAAA,EAAAA,GAAeV,EAAUS,mBAC3DT,EAAUE,UAAYF,EAAUI,WAAa,uBAAK1B,UAAU,6BAC1D,qBAAGyB,KAAMH,EAAUI,UAAW1B,UAAU,SAASsB,EAAUW,YAKpE,sBAAKjC,UAAU,eACb,0BACGoB,EAASc,MAAS,gBAAC,KAAI,CAACC,GAAE,aAAgBf,EAASc,KAASlC,UAAU,cAAcoB,EAASgB,YAEhG,0BACGnB,EAASiB,MAAQ,gBAAC,KAAI,CAACC,GAAE,aAAgBlB,EAASiB,KAASlC,UAAU,cAAciB,EAASmB,eAOnH,EAGG,MAoDMC,EAAO,IAAM,gBAAC,IAAG,CAAC5B,MAAM,Y","sources":["webpack://ethno-contemporary-ballet/./src/components/eventGallary/eventGallary.js","webpack://ethno-contemporary-ballet/./src/templates/project.js"],"sourcesContent":["import * as React from \"react\"\r\nimport './eventGallary.scss';\r\nimport 'swiper/swiper-bundle.css';\r\n\r\nimport 'swiper/scss/pagination';\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport {  Navigation} from \"swiper\";\r\n\r\n\r\nfunction EventGallary({data}) {\r\n    return(\r\n        <div className=\"swiper-event\">\r\n        <Swiper\r\n            modules={[ Navigation]}\r\n            slidesPerView={1}\r\n            navigation\r\n            >\r\n            { data.map((slide, id)=> {\r\n            return (\r\n               \r\n                     <SwiperSlide key={slide.title +  id}>\r\n                        <div className=\"event-gallery-card\">\r\n                            <div className=\"bg-image\"  style={{backgroundColor: '#000'}}>\r\n                                {slide.file.url && <img src={slide.file.url} alt={slide.title}/>}\r\n                            </div> \r\n                                <div className=\"event-gallery-card__body\">\r\n                                        {slide.title && <h2 className=\"event-gallery-card__title\">{slide.title } </h2>}\r\n                                        {slide.description && <h4 className=\"event-gallery-card__subtitle\">{slide.description}</h4> }\r\n                                </div>\r\n                        </div>\r\n                    </SwiperSlide>\r\n               \r\n                )\r\n            })}\r\n        </Swiper>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default EventGallary;\r\n\r\n","import * as React from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\nimport {  graphql, Link } from \"gatsby\"\r\nimport { renderRichText } from 'gatsby-source-contentful/rich-text';\r\nimport EventGallary from '../components/eventGallary/eventGallary.js'\r\n\r\n\r\nexport default ({data}) => {\r\n  const nextPage= {...data.next.nodes[0]}\r\n  const prevPage= {...data.previous.nodes[0]}\r\n  const eventData= {...data.allContentfulCardEvent.nodes[0]}\r\n     return (\r\n       <Layout>\r\n         <section className=\"section-content\">\r\n               <div className=\"container\">\r\n                      <article>\r\n                      {eventData?.newEvent && <a href={eventData.linkEvent}  className=\"event-new\">{ eventData.newEventsText}</a>}\r\n                         {eventData?.image?.url && !eventData?.projectgallery  &&  \r\n                         <div className=\"section-content__image\">\r\n                            <img src={eventData?.image?.url} alt={eventData?.image?.description}/>\r\n                        </div>}\r\n                        { eventData?.projectgallery   && \r\n                          <EventGallary data={eventData.projectgallery}/>\r\n                        }\r\n                        {eventData.title && <h1 className=\"section-content__title\">{eventData.title}</h1> }\r\n                       \r\n                        {eventData?.previewText && <h4 className=\"section-content__subtitle\">{eventData.previewText}</h4>} \r\n                        <div className=\"section-content__contetn\">\r\n                            {eventData.descriptionEvent &&  <>{renderRichText(eventData.descriptionEvent)}</>}\r\n                            {eventData.newEvent && eventData.linkEvent && <div className=\"section-content__btn-wrap\">\r\n                               <a href={eventData.linkEvent} className=\"link \">{eventData.textBtn}</a>\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    </article>\r\n                      <ul  className=\"pagination \">\r\n                        <li>\r\n                          {prevPage.slug &&  <Link to={ `/projects/${prevPage.slug}`}  className=\"link prev \">{prevPage.nameEvent}</Link>}\r\n                        </li>\r\n                        <li>\r\n                          {nextPage.slug && <Link to={ `/projects/${nextPage.slug}`}  className=\"link  next\">{nextPage.nameEvent}</Link>}\r\n                        </li>\r\n                      </ul>\r\n               </div>\r\n          </section> \r\n       </Layout>\r\n     );\r\n   };\r\n\r\n\r\nexport const query = graphql`\r\nquery MyQuery( \r\n  $slug:String\r\n  $previousPostSlug: String\r\n  $nextPostSlug: String\r\n) {\r\n    allContentfulCardEvent(filter: {slug: {eq: $slug}}) {\r\n        nodes {\r\n          descriptionEvent {\r\n            raw\r\n          }\r\n          nameBlock\r\n          newEvent\r\n          newEventsText\r\n          slug\r\n          title\r\n          linkEvent\r\n          nameEvent\r\n          textBtn\r\n          previewText\r\n          id\r\n          projectgallery {\r\n            id\r\n            description\r\n            title\r\n            file {\r\n              url\r\n              fileName\r\n              contentType\r\n            }\r\n          }\r\n          image {\r\n            url\r\n            description\r\n          }\r\n        }\r\n      }\r\n      previous: allContentfulCardEvent(filter: {slug: { eq: $previousPostSlug }}) {\r\n        nodes {\r\n          slug\r\n          nameEvent\r\n        }\r\n      }\r\n      next: allContentfulCardEvent(filter: {slug: { eq: $nextPostSlug }}) {\r\n        nodes {\r\n          slug\r\n          nameEvent\r\n        }\r\n      }\r\n    }\r\n`\r\n\r\nexport const Head = () => <Seo title=\"EventOld\" />"],"names":["data","className","modules","Navigation","slidesPerView","navigation","map","slide","id","key","title","style","backgroundColor","file","url","src","alt","description","nextPage","next","nodes","prevPage","previous","eventData","allContentfulCardEvent","newEvent","href","linkEvent","newEventsText","image","projectgallery","previewText","descriptionEvent","renderRichText","textBtn","slug","to","nameEvent","Head"],"sourceRoot":""}