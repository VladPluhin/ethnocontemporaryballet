{"version":3,"file":"component---src-templates-project-js-4f8ba8f5722c4abfd668.js","mappings":"2RAsCA,MA7BA,SAAqBA,GAAU,IAAT,KAACC,GAAKD,EACxB,OACIE,EAAAA,cAAA,OAAKC,UAAU,iBACfD,EAAAA,cAACE,EAAAA,GAAM,CACHC,QAAS,CAAEC,EAAAA,IACXC,YAAc,EACdC,cAAe,EACfC,aAAc,GACdC,YAAU,GAERT,EAAKU,KAAI,CAACC,EAAOC,IAGVX,EAAAA,cAACY,EAAAA,GAAW,CAACC,IAAKH,EAAMI,MAASH,GAC9BX,EAAAA,cAAA,OAAKC,UAAU,sBACXD,EAAAA,cAAA,OAAKC,UAAU,YACVS,EAAMK,KAAKC,KAAOhB,EAAAA,cAAA,OAAKiB,IAAKP,EAAMK,KAAKC,IAAKE,IAAKR,EAAMI,cAWxF,EC5BA,EAAehB,IAAa,IAADqB,EAAAC,EAAAC,EAAA,IAAX,KAACtB,GAAKD,EACpB,MAAMwB,EAAU,IAAIvB,EAAKwB,KAAKC,MAAM,IAC9BC,EAAU,IAAI1B,EAAK2B,SAASF,MAAM,IAClCG,EAAW,IAAI5B,EAAK6B,uBAAuBJ,MAAM,IACpD,OACExB,EAAAA,cAAC6B,EAAAA,EAAM,KACL7B,EAAAA,cAAA,WAASC,UAAU,mBACbD,EAAAA,cAAA,OAAKC,UAAU,aACRD,EAAAA,cAAA,gBACC2B,aAAS,EAATA,EAAWG,WAAY9B,EAAAA,cAAA,KAAG+B,KAAMJ,EAAUK,UAAY/B,UAAU,aAAc0B,EAAUM,gBACrFN,SAAgB,QAAPR,EAATQ,EAAWO,aAAK,IAAAf,OAAP,EAATA,EAAkBH,QAAQW,SAAAA,EAAWQ,iBACtCnC,EAAAA,cAAA,OAAKC,UAAU,0BACZD,EAAAA,cAAA,OAAKiB,IAAKU,SAAgB,QAAPP,EAATO,EAAWO,aAAK,IAAAd,OAAP,EAATA,EAAkBJ,IAAKE,IAAKS,SAAgB,QAAPN,EAATM,EAAWO,aAAK,IAAAb,OAAP,EAATA,EAAkBe,gBAE1DT,aAAS,EAATA,EAAWQ,iBACXnC,EAAAA,cAACqC,EAAY,CAACtC,KAAM4B,EAAUQ,iBAE/BR,EAAUb,OAASd,EAAAA,cAAA,MAAIC,UAAU,0BAA0B0B,EAAUb,QAErEa,aAAS,EAATA,EAAWW,cAAetC,EAAAA,cAAA,MAAIC,UAAU,6BAA6B0B,EAAUW,aAChFtC,EAAAA,cAAA,OAAKC,UAAU,4BACV0B,EAAUY,kBAAqBvC,EAAAA,cAAAA,EAAAA,SAAA,MAAGwC,EAAAA,EAAAA,GAAeb,EAAUY,mBAC3DZ,EAAUG,UAAYH,EAAUK,WAAahC,EAAAA,cAAA,OAAKC,UAAU,6BAC1DD,EAAAA,cAAA,KAAG+B,KAAMJ,EAAUK,UAAW/B,UAAU,SAAS0B,EAAUc,YAKpEzC,EAAAA,cAAA,MAAKC,UAAU,eACbD,EAAAA,cAAA,UACGyB,EAASiB,MAAS1C,EAAAA,cAAC2C,EAAAA,GAAI,CAACC,GAAE,aAAgBnB,EAASiB,KAASzC,UAAU,cAAcwB,EAASoB,YAEhG7C,EAAAA,cAAA,UACGsB,EAASoB,MAAQ1C,EAAAA,cAAC2C,EAAAA,GAAI,CAACC,GAAE,aAAgBtB,EAASoB,KAASzC,UAAU,cAAcqB,EAASuB,eAOnH,EAGG,MAoDMC,EAAOA,IAAM9C,EAAAA,cAAC+C,EAAAA,EAAG,CAACjC,MAAM,Y","sources":["webpack://ethno-contemporary-ballet/./src/components/eventGallary/eventGallary.js","webpack://ethno-contemporary-ballet/./src/templates/project.js"],"sourcesContent":["import * as React from \"react\"\nimport './eventGallary.scss';\nimport 'swiper/swiper-bundle.css';\n\nimport 'swiper/scss/pagination';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport {  Navigation} from \"swiper\";\n\n\nfunction EventGallary({data}) {\n    return(\n        <div className=\"swiper-event \">\n        <Swiper\n            modules={[ Navigation]}\n            autoHeight = {true}\n            slidesPerView={1}\n            spaceBetween={50}\n            navigation\n            >\n            { data.map((slide, id)=> {\n            return (\n               \n                     <SwiperSlide key={slide.title +  id}>\n                        <div className=\"event-gallery-card\">\n                            <div className=\"bg-image\" >\n                                {slide.file.url && <img src={slide.file.url} alt={slide.title}/>}\n                            </div> \n                                \n                        </div>\n                    </SwiperSlide>\n               \n                )\n            })}\n        </Swiper>\n    </div>\n    )\n}\n\nexport default EventGallary;\n\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport {  graphql, Link } from \"gatsby\"\nimport { renderRichText } from 'gatsby-source-contentful/rich-text';\nimport EventGallary from '../components/eventGallary/eventGallary.js'\n\n\nexport default ({data}) => {\n  const nextPage= {...data.next.nodes[0]}\n  const prevPage= {...data.previous.nodes[0]}\n  const eventData= {...data.allContentfulCardEvent.nodes[0]}\n     return (\n       <Layout>\n         <section className=\"section-content\">\n               <div className=\"container\">\n                      <article>\n                      {eventData?.newEvent && <a href={eventData.linkEvent}  className=\"event-new\">{ eventData.newEventsText}</a>}\n                         {eventData?.image?.url && !eventData?.projectgallery  &&  \n                         <div className=\"section-content__image\">\n                            <img src={eventData?.image?.url} alt={eventData?.image?.description}/>\n                        </div>}\n                        { eventData?.projectgallery   && \n                          <EventGallary data={eventData.projectgallery}/>\n                        }\n                        {eventData.title && <h1 className=\"section-content__title\">{eventData.title}</h1> }\n                       \n                        {eventData?.previewText && <h4 className=\"section-content__subtitle\">{eventData.previewText}</h4>} \n                        <div className=\"section-content__contetn\">\n                            {eventData.descriptionEvent &&  <>{renderRichText(eventData.descriptionEvent)}</>}\n                            {eventData.newEvent && eventData.linkEvent && <div className=\"section-content__btn-wrap\">\n                               <a href={eventData.linkEvent} className=\"link \">{eventData.textBtn}</a>\n                            </div>\n                            }\n                        </div>\n                    </article>\n                      <ul  className=\"pagination \">\n                        <li>\n                          {prevPage.slug &&  <Link to={ `/projects/${prevPage.slug}`}  className=\"link prev \">{prevPage.nameEvent}</Link>}\n                        </li>\n                        <li>\n                          {nextPage.slug && <Link to={ `/projects/${nextPage.slug}`}  className=\"link  next\">{nextPage.nameEvent}</Link>}\n                        </li>\n                      </ul>\n               </div>\n          </section> \n       </Layout>\n     );\n   };\n\n\nexport const query = graphql`\nquery MyQuery( \n  $slug:String\n  $previousPostSlug: String\n  $nextPostSlug: String\n) {\n    allContentfulCardEvent(filter: {slug: {eq: $slug}}) {\n        nodes {\n          descriptionEvent {\n            raw\n          }\n          nameBlock\n          newEvent\n          newEventsText\n          slug\n          title\n          linkEvent\n          nameEvent\n          textBtn\n          previewText\n          id\n          projectgallery {\n            id\n            description\n            title\n            file {\n              url\n              fileName\n              contentType\n            }\n          }\n          image {\n            url\n            description\n          }\n        }\n      }\n      previous: allContentfulCardEvent(filter: {slug: { eq: $previousPostSlug }}) {\n        nodes {\n          slug\n          nameEvent\n        }\n      }\n      next: allContentfulCardEvent(filter: {slug: { eq: $nextPostSlug }}) {\n        nodes {\n          slug\n          nameEvent\n        }\n      }\n    }\n`\n\nexport const Head = () => <Seo title=\"EventOld\" />"],"names":["_ref","data","React","className","Swiper","modules","Navigation","autoHeight","slidesPerView","spaceBetween","navigation","map","slide","id","SwiperSlide","key","title","file","url","src","alt","_eventData$image","_eventData$image2","_eventData$image3","nextPage","next","nodes","prevPage","previous","eventData","allContentfulCardEvent","Layout","newEvent","href","linkEvent","newEventsText","image","projectgallery","description","EventGallary","previewText","descriptionEvent","renderRichText","textBtn","slug","Link","to","nameEvent","Head","Seo"],"sourceRoot":""}