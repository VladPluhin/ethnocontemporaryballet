{"version":3,"file":"component---src-templates-project-js-2995e39771c5b1834da3.js","mappings":"2RAoCA,MA3BA,SAAsB,GAAS,IAAT,KAACA,GAAK,EACxB,OACI,uBAAKC,UAAU,gBACf,gBAAC,KAAM,CACHC,QAAS,CAAEC,EAAAA,IACXC,cAAe,EACfC,YAAU,GAERL,EAAKM,KAAI,CAACC,EAAOC,IAGV,gBAAC,KAAW,CAACC,IAAKF,EAAMG,MAASF,GAC9B,uBAAKP,UAAU,sBACX,uBAAKA,UAAU,YACVM,EAAMI,KAAKC,KAAO,uBAAKC,IAAKN,EAAMI,KAAKC,IAAKE,IAAKP,EAAMG,cAWxF,EC1BA,EAAe,IAAa,IAAD,UAAX,KAACV,GAAK,EACpB,MAAMe,EAAU,IAAIf,EAAKgB,KAAKC,MAAM,IAC9BC,EAAU,IAAIlB,EAAKmB,SAASF,MAAM,IAClCG,EAAW,IAAIpB,EAAKqB,uBAAuBJ,MAAM,IACpD,OACE,gBAAC,IAAM,KACL,2BAAShB,UAAU,mBACb,uBAAKA,UAAU,aACR,gCACCmB,aAAS,EAATA,EAAWE,WAAY,qBAAGC,KAAMH,EAAUI,UAAYvB,UAAU,aAAcmB,EAAUK,gBACrFL,SAAgB,QAAP,EAATA,EAAWM,aAAK,WAAP,EAAT,EAAkBd,QAAQQ,SAAAA,EAAWO,iBACtC,uBAAK1B,UAAU,0BACZ,uBAAKY,IAAKO,SAAgB,QAAP,EAATA,EAAWM,aAAK,WAAP,EAAT,EAAkBd,IAAKE,IAAKM,SAAgB,QAAP,EAATA,EAAWM,aAAK,WAAP,EAAT,EAAkBE,gBAE1DR,aAAS,EAATA,EAAWO,iBACX,gBAAC,EAAY,CAAC3B,KAAMoB,EAAUO,iBAE/BP,EAAUV,OAAS,sBAAIT,UAAU,0BAA0BmB,EAAUV,QAErEU,aAAS,EAATA,EAAWS,cAAe,sBAAI5B,UAAU,6BAA6BmB,EAAUS,aAChF,uBAAK5B,UAAU,4BACVmB,EAAUU,kBAAqB,iCAAGC,EAAAA,EAAAA,GAAeX,EAAUU,mBAC3DV,EAAUE,UAAYF,EAAUI,WAAa,uBAAKvB,UAAU,6BAC1D,qBAAGsB,KAAMH,EAAUI,UAAWvB,UAAU,SAASmB,EAAUY,YAKpE,sBAAK/B,UAAU,eACb,0BACGiB,EAASe,MAAS,gBAAC,KAAI,CAACC,GAAE,aAAgBhB,EAASe,KAAShC,UAAU,cAAciB,EAASiB,YAEhG,0BACGpB,EAASkB,MAAQ,gBAAC,KAAI,CAACC,GAAE,aAAgBnB,EAASkB,KAAShC,UAAU,cAAcc,EAASoB,eAOnH,EAGG,MAoDMC,EAAO,IAAM,gBAAC,IAAG,CAAC1B,MAAM,Y","sources":["webpack://ethno-contemporary-ballet/./src/components/eventGallary/eventGallary.js","webpack://ethno-contemporary-ballet/./src/templates/project.js"],"sourcesContent":["import * as React from \"react\"\nimport './eventGallary.scss';\nimport 'swiper/swiper-bundle.css';\n\nimport 'swiper/scss/pagination';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport {  Navigation} from \"swiper\";\n\n\nfunction EventGallary({data}) {\n    return(\n        <div className=\"swiper-event\">\n        <Swiper\n            modules={[ Navigation]}\n            slidesPerView={1}\n            navigation\n            >\n            { data.map((slide, id)=> {\n            return (\n               \n                     <SwiperSlide key={slide.title +  id}>\n                        <div className=\"event-gallery-card\">\n                            <div className=\"bg-image\" >\n                                {slide.file.url && <img src={slide.file.url} alt={slide.title}/>}\n                            </div> \n                                \n                        </div>\n                    </SwiperSlide>\n               \n                )\n            })}\n        </Swiper>\n    </div>\n    )\n}\n\nexport default EventGallary;\n\n","import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport {  graphql, Link } from \"gatsby\"\nimport { renderRichText } from 'gatsby-source-contentful/rich-text';\nimport EventGallary from '../components/eventGallary/eventGallary.js'\n\n\nexport default ({data}) => {\n  const nextPage= {...data.next.nodes[0]}\n  const prevPage= {...data.previous.nodes[0]}\n  const eventData= {...data.allContentfulCardEvent.nodes[0]}\n     return (\n       <Layout>\n         <section className=\"section-content\">\n               <div className=\"container\">\n                      <article>\n                      {eventData?.newEvent && <a href={eventData.linkEvent}  className=\"event-new\">{ eventData.newEventsText}</a>}\n                         {eventData?.image?.url && !eventData?.projectgallery  &&  \n                         <div className=\"section-content__image\">\n                            <img src={eventData?.image?.url} alt={eventData?.image?.description}/>\n                        </div>}\n                        { eventData?.projectgallery   && \n                          <EventGallary data={eventData.projectgallery}/>\n                        }\n                        {eventData.title && <h1 className=\"section-content__title\">{eventData.title}</h1> }\n                       \n                        {eventData?.previewText && <h4 className=\"section-content__subtitle\">{eventData.previewText}</h4>} \n                        <div className=\"section-content__contetn\">\n                            {eventData.descriptionEvent &&  <>{renderRichText(eventData.descriptionEvent)}</>}\n                            {eventData.newEvent && eventData.linkEvent && <div className=\"section-content__btn-wrap\">\n                               <a href={eventData.linkEvent} className=\"link \">{eventData.textBtn}</a>\n                            </div>\n                            }\n                        </div>\n                    </article>\n                      <ul  className=\"pagination \">\n                        <li>\n                          {prevPage.slug &&  <Link to={ `/projects/${prevPage.slug}`}  className=\"link prev \">{prevPage.nameEvent}</Link>}\n                        </li>\n                        <li>\n                          {nextPage.slug && <Link to={ `/projects/${nextPage.slug}`}  className=\"link  next\">{nextPage.nameEvent}</Link>}\n                        </li>\n                      </ul>\n               </div>\n          </section> \n       </Layout>\n     );\n   };\n\n\nexport const query = graphql`\nquery MyQuery( \n  $slug:String\n  $previousPostSlug: String\n  $nextPostSlug: String\n) {\n    allContentfulCardEvent(filter: {slug: {eq: $slug}}) {\n        nodes {\n          descriptionEvent {\n            raw\n          }\n          nameBlock\n          newEvent\n          newEventsText\n          slug\n          title\n          linkEvent\n          nameEvent\n          textBtn\n          previewText\n          id\n          projectgallery {\n            id\n            description\n            title\n            file {\n              url\n              fileName\n              contentType\n            }\n          }\n          image {\n            url\n            description\n          }\n        }\n      }\n      previous: allContentfulCardEvent(filter: {slug: { eq: $previousPostSlug }}) {\n        nodes {\n          slug\n          nameEvent\n        }\n      }\n      next: allContentfulCardEvent(filter: {slug: { eq: $nextPostSlug }}) {\n        nodes {\n          slug\n          nameEvent\n        }\n      }\n    }\n`\n\nexport const Head = () => <Seo title=\"EventOld\" />"],"names":["data","className","modules","Navigation","slidesPerView","navigation","map","slide","id","key","title","file","url","src","alt","nextPage","next","nodes","prevPage","previous","eventData","allContentfulCardEvent","newEvent","href","linkEvent","newEventsText","image","projectgallery","description","previewText","descriptionEvent","renderRichText","textBtn","slug","to","nameEvent","Head"],"sourceRoot":""}